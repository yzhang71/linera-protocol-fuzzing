// Copyright (c) Zefchain Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

//! Conversions from types generated by [`wit-bindgen-guest-rust`] to types declared in
//! [`linera-sdk`].

use super::view_system_api::{PollFindKeyValues, PollFindKeys, PollReadKeyBytes, PollUnit};
use std::task::Poll;

impl From<PollUnit> for Poll<()> {
    fn from(poll_write_batch: PollUnit) -> Self {
        match poll_write_batch {
            PollUnit::Ready => Poll::Ready(()),
            PollUnit::Pending => Poll::Pending,
        }
    }
}

impl From<PollReadKeyBytes> for Poll<Option<Vec<u8>>> {
    fn from(poll_read_key_bytes: PollReadKeyBytes) -> Self {
        match poll_read_key_bytes {
            PollReadKeyBytes::Ready(bytes) => Poll::Ready(bytes),
            PollReadKeyBytes::Pending => Poll::Pending,
        }
    }
}

impl From<PollFindKeys> for Poll<Vec<Vec<u8>>> {
    fn from(poll_find_keys: PollFindKeys) -> Self {
        match poll_find_keys {
            PollFindKeys::Ready(keys) => Poll::Ready(keys),
            PollFindKeys::Pending => Poll::Pending,
        }
    }
}

impl From<PollFindKeyValues> for Poll<Vec<(Vec<u8>, Vec<u8>)>> {
    fn from(poll_find_key_values: PollFindKeyValues) -> Self {
        match poll_find_key_values {
            PollFindKeyValues::Ready(key_values) => Poll::Ready(key_values),
            PollFindKeyValues::Pending => Poll::Pending,
        }
    }
}
