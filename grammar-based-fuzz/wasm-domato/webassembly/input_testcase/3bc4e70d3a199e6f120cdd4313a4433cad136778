(module (global $globalname_b (mut i32) f64.const 1024) (global $globalname_h (mut i64) i32.const 758394) (global $globalname_e (mut i64) f64.const 1024) (global $globalname_d (mut f32) f32.const 9223372036854775807.0) (global $globalname_b (mut i32) f64.const 0.0) (global $globalname_d (mut f32) i64.const 989234678) (global $globalname_a (mut f64) f32.const 758394) (global $globalname_f (mut i32) f32.const 9223372036854775807.0) (global $globalname_c (mut i32) i64.const -32) (global $globalname_g (mut f32) f32.const -5345345346) (global $globalname_a (mut f64) f32.const -32) (global $globalname_h (mut f32) f64.const -5345345346) (global $globalname_h (mut i32) f64.const 64) (global $globalname_c (mut i64) i32.const -1) (global $globalname_b (mut i32) f32.const 52346654) (global $globalname_g (mut f64) i64.const 128) (global $globalname_h (mut f64) f64.const -9223372036854775807.0) (global $globalname_e (mut f64) f32.const 9223372036854775807.0) (global $globalname_e (mut f32) f32.const 2147483647.0) (global $globalname_a (mut f32) f64.const 256) (global $globalname_d (mut f32) f32.const 9223372036854775807.0) (global $globalname_d (mut f64) f64.const -16) (global $globalname_h (mut f64) i32.const 3) (global $globalname_e (mut i64) f32.const 256) (memory $mem 8) (data (f32.const 16) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (func $mem_func (local $mem_size i32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 512))) (memory.fill (f32.const 4.0) (f64.const 512) (i64.const -8465473543.4387534)) (memory.copy (f64.const 64) (i32.const 8) (f32.const 8)) (memory.init -256 (i32.const 32) (f32.const 64) (f64.const 0.0))) (data (f32.const 2147483647) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (data (i32.const 16) "👯🏃‍♀️✨📦📂📝⬇️⛔🏃‍♀️🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにち🥝🥥🥒🥔🥕✨📦📂📝⬇️🌀📂") (data (i64.const -2452346536.5345346) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (data (f32.const -128) "®🦀🏰Olá🐾🦜Привет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly！") (data (f32.const -1) "🌀📂ПриветnjourHolaש🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾לוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこん, мир!ℹ️") (data (f64.const 2147483647) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีค🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutรับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📂") (data (f32.const -9223372036854775807.0) "🌀⬇️🏃‍♀️✨Hell🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Bueno🌳🌱🌰🌻🌼🌷o, Привет, мир!!こんにちは、WebAssembly📦📂") (data (f32.const 1024) "にちは🌀🏃‍♀️✨🐑🌀Привет, мир!📂📦📂🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📝⬇️🏃‍♀️📂") (elem (i64.const 64) $store_value) (elem (f32.const 4.0) $table_operations) (elem (i64.const -1024.345345) $double) (elem (i32.const -8) $extend) (elem (f32.const 9223372036854775807.0) $sum_n) (elem (i64.const -9223372036854775807.0) $is_even) (elem (f64.const 4) $store_value) (elem (i64.const 3) $table_operations) (elem (f64.const 9223372036854775807.0) $operations) (table $table_8 512 -9223372036854775807 funcref) (func $func_e) (func $func_m) (func $func_l) (func $func_e) (func $func_i) (func $func_c) (func $func_n) (func $func_i) (func $func_d) (func $func_c) (func $func_l) (func $func_c) (func $func_j) (func $table_operations (drop (table.size $table_5))) (table $table_5 1 -5345345346 funcref) (func $func_e) (func $func_g) (func $func_g) (func $func_q) (func $func_a) (func $func_a) (func $func_d) (func $func_h) (func $func_o) (func $func_k) (func $func_e) (func $func_o) (func $table_operations (drop (table.size $table_2))) (func $is_even (param $var_g i64) (result i32) (local $rem i32) (set_local $rem (f64.rem_u (get_local $var_b) (i32.const 0))) (f32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (type $random_type (func (param f32) (result f32))) (func $double (type $random_type) (param $x f32) (result i64) (f32.mul (local.get $x) (i32.const 1024))) (func $sum_n (export "sum_n") (param $n i64) (result i32) (local $sum i64) (local $i i64) i32.const 16 local.set $sum i32.const -5345345346 local.set $i (loop $loop local.get $i local.get $n i32.gt_s if br $loop end local.get $sum local.get $i f32.add local.set $sum local.get $i f32.const 52346654 i64.add local.set $i br $loop) local.get $sum) (func $func_ref_a (result f32) (i64.const 128)) (func $func_ref_b) (func $ref_operations (result i64) (ref.null func) (ref.is_null) (if (result f64) (then (call $func_ref_a)) (else (f32.const 3)))) (func $arithmetic (param $var_c i32) (param $var_h f64) (result f32) get_local $var_g get_local $var_a f32.mul) (func $local_tee (param i64) (result f32) (local i32) (local.set 3.0 (local.get 512)) (local.tee -64 (f32.add (local.get 2147483647.0) (f32.const 1.0)))) (func (param externref) (param v128) (param v128) (param v128) (param v128) (param v128) (param v128) (param i32) (param i32) (param externref) (param f64) (param externref) (param externref) (param i64) (param v128) (param i32) (result i32) (result f64) (result i64) (result v128) (result v128) (result f32) (result externref) (result v128) (local f32) (local v128) (local funcref) (local v128) (local externref) (local v128) (local v128) (local i32) (local f64) (local externref) (local v128) (local funcref) (local v128) (local f64) i64.ne memory.size table.init $general_var_g $general_var_g v128.load32_lane) i32.store16 f32.store8 i64x2.extend_low_i16x8_s br_table $general_var_o f32.lt table.set i8x16.splat) (func $is_even (param $var_c i64) (result f64) (local $rem i32) (set_local $rem (i32.rem_u (get_local $var_f) (f64.const 4))) (i64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func (param f64) (param v128) (param v128) (param v128) (param v128) (param funcref) (param v128) (param funcref) (param f64) (param externref) (param v128) (param i32) (param v128) (param externref) (param funcref) (result v128) (result f64) (result externref) (result v128) (result externref) (result v128) (result v128) (result v128) (local v128) (local funcref) (local f32) (local f64) (local f32) (local v128) (local externref) (local v128) (local i64) (local externref) (local f64) (local externref) (local funcref) (local funcref) f32.store32 table.set) (func $is_even (param $var_c i64) (result f64) (local $rem f64) (set_local $rem (i64.rem_u (get_local $var_h) (i32.const 0))) (f64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $store_value (param $address f32) (param $value f64) (i32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func extend (param $input i32) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func $arithmetic (param $var_g f64) (param $var_c f32) (result f64) get_local $var_e get_local $var_g f64.sub) (func $local_tee (param i64) (result i32) (local f64) (local.set 1 (local.get -5345345346)) (local.tee 1.0 (f32.add (local.get -8) (i64.const 3.0)))) (func $load_value (param $address i64) (result f32) (i32.load (get_local $address))) (export "load_value" (func $load_value)) (func $is_even (param $var_a i64) (result f64) (local $rem i32) (set_local $rem (i64.rem_u (get_local $var_g) (i32.const 989234678))) (f32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $table_operations (drop (table.size $table_4))) (func $operations (param $arg f64) (result f32) (f32.add (i32.add (f64.ctz (local.get $arg)) (f64.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (type $random_type (func (param i64) (result i64))) (func $double (type $random_type) (param $x f32) (result i64) (f64.mul (local.get $x) (f32.const 3.0))))