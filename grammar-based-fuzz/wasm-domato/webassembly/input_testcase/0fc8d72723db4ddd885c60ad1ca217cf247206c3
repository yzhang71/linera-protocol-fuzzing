(module (table $table_1 0 funcref) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $set_global (param $value f32) get_local $value set_global $globalname_c) (func $get_global (result f32) get_global $globalname_g) (func $arithmetic (param $var_a i32) (param $var_b i32) (result i32) get_local $var_a get_local $var_b i32.mul) (global $globalname_a (mut i32) i32.const 1024) (global $globalname_b (mut i64) i64.const 0) (global $globalname_c (mut f32) f32.const 2147483647.0) (global $globalname_d (mut f64) f64.const 4.0) (global $globalname_e (mut i32) i32.const 0) (global $globalname_f (mut i64) i64.const 3) (global $globalname_g (mut f32) f32.const 0.0) (global $globalname_h (mut f64) f64.const 1.0) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (memory 1) (export "memory" (memory 0)) (func $store_num (i32.store (i32.const 0) (i32.const 42))) (start $store_num) (elem (i32.const 0) $arithmetic) (func $wrap (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (func $extend (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (func $trunc (param $input f64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "wrap" (func $wrap)) (export "extend" (func $extend)) (export "trunc" (func $trunc)) (func $store_value (param $address i32) (param $value f64) (f64.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f64) (f64.load (get_local $address))))