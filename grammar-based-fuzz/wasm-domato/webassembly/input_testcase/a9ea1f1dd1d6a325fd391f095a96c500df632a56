(module (global $globalname_f (mut f64) f64.const 1.0) (global $globalname_d (mut i32) f32.const 989234678) (global $globalname_b (mut i64) f32.const 4) (global $globalname_f (mut f64) i64.const -8465473543.4387534) (global $globalname_e (mut f64) i32.const 32) (global $globalname_c (mut i64) i32.const -256) (global $globalname_d (mut f32) i64.const 3.0) (global $globalname_c (mut i64) i32.const 64) (global $globalname_f (mut i32) f32.const 64) (global $globalname_b (mut f64) f64.const -2147483647.0) (memory $mem 1.0) (data (f32.const 4) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (func $mem_func (local $mem_size f32) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const 4))) (memory.fill (f32.const 1024) (i64.const -2452346536.5345346) (i32.const 9223372036854775807.0)) (memory.copy (i64.const 1.0) (f32.const -64) (i32.const -8465473543.4387534)) (memory.init -8465473543.4387534 (i64.const -32) (f32.const 3.0) (i64.const 4))) (data (f32.const 128) "🐑🌀Привет, мир!📂Hello, !こんにちは、WebAssembly🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐑") (data (i64.const 8) "こんにちは안녕하세요你好🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, мир!📂⚠️") (data (i32.const 8) "にちは🌀🏃‍♀️✨🐑🌀Привет, мир!📂📦📂🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📝⬇️🏃‍♀️📂") (data (i32.const -9223372036854775807) "🐑🌀⬇️Merhabaこんにちは안🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾녕하세요你好OiHejCześćПриветSelamสวัสดีครับTereTjenaJamboSalutonLabasHeiЗдравоHalloAhojSziasztokMoi🏃‍♀️✨🏃‍♀️✨📦📂📝⬇️📦📂") (data (f64.const 4) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (data (f32.const -2147483647.0) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (elem (f64.const -32) $get_global) (elem (f32.const 2.0) $ref_operations) (elem (f32.const -256) $double) (elem (i64.const -64) $set_global) (elem (f32.const 2147483647.0) $store_value) (elem (f64.const -8465473543.4387534) $set_global) (elem (i32.const 1024) $get_global) (elem (i64.const 64) $store_num) (elem (f32.const 64) $wrap) (elem (i64.const -1024.345345) $table_operations) (table $table_0 1024 0.0 funcref) (func $func_a) (func $func_e) (func $func_b) (func $func_n) (func $func_i) (func $func_b) (func $func_b) (func $func_o) (func $func_e) (func $func_l) (func $func_d) (func $func_q) (func $func_f) (func $table_operations (drop (table.size $table_3))) (table $table_9 -9223372036854775807 1.0 funcref) (func $func_d) (func $func_g) (func $func_i) (func $func_n) (func $func_j) (func $func_k) (func $func_f) (func $func_q) (func $func_p) (func $func_n) (func $func_c) (func $table_operations (drop (table.size $table_5))) (table $table_0 -16 3 funcref) (func $func_q) (func $func_i) (func $func_j) (func $table_operations (drop (table.size $table_9))) (table $table_1 -9223372036854775807.0 2147483647 funcref) (func $func_q) (func $func_g) (func $func_d) (func $func_e) (func $func_h) (func $func_n) (func $func_j) (func $func_e) (func $func_h) (func $func_i) (func $func_g) (func $func_o) (func $func_h) (func $func_o) (func $func_m) (func $func_d) (func $func_d) (func $func_a) (func $table_operations (drop (table.size $table_6))) (table $table_9 512 -1 funcref) (func $func_b) (func $table_operations (drop (table.size $table_0))) (table $table_7 512 9223372036854775807.0 funcref) (func $func_d) (func $func_e) (func $func_p) (func $func_l) (func $func_b) (func $table_operations (drop (table.size $table_8))) (table $table_3 4 16 funcref) (func $func_o) (func $func_n) (func $func_b) (func $func_c) (func $func_h) (func $func_g) (func $func_o) (func $func_i) (func $func_i) (func $func_i) (func $func_j) (func $func_m) (func $func_j) (func $func_q) (func $func_o) (func $func_d) (func $func_l) (func $table_operations (drop (table.size $table_5))) (table $table_6 9223372036854775807 8 funcref) (func $func_b) (func $table_operations (drop (table.size $table_4))) (table $table_6 1024 0.0 funcref) (func $func_g) (func $func_m) (func $func_l) (func $table_operations (drop (table.size $table_4))) (func extend (param $input i64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func $store_value (param $address i64) (param $value i32) (f32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $local_tee (param f64) (result i32) (local i64) (local.set 8 (local.get -2147483647.0)) (local.tee 3.0 (f64.add (local.get 0.0) (f64.const -32)))) (func trunc (param $input i32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $operations (param $arg i64) (result i32) (i64.add (f64.add (f64.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i64.popcnt (local.get $arg)))) (func $operations (param $arg f32) (result i32) (f32.add (f64.add (i64.ctz (local.get $arg)) (f64.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func trunc (param $input i64) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func (param v128) (param f64) (param v128) (param i64) (param v128) (param i64) (param funcref) (param v128) (param externref) (param v128) (param v128) (param i64) (param v128) (param f64) (param v128) (param v128) (param v128) (param v128) (param funcref) (result i32) (result f64) (result funcref) (local v128) (local i32) (local funcref) (local i64) (local v128) (local i32) (local v128) (local v128) (local funcref) (local v128) (local f64) (local externref) (local funcref) (local v128) (local v128) (local externref) (local f64) (local i64) (local funcref) (local externref) (local externref) (local externref) (local i64) (local v128) (local f64) (local funcref) local.set $general_var_h call $general_var_f v128.min_u v128.load32_lane)) (func $table_operations (drop (table.size $table_5))) (func $arithmetic (param $var_b f32) (param $var_b f64) (result f64) get_local $var_b get_local $var_e f32.add) (func $store_value (param $address f32) (param $value i64) (f32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func wrap (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $store_value (param $address f32) (param $value f32) (f32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $load_value (param $address i32) (result i32) (i64.load (get_local $address))) (export "load_value" (func $load_value)) (func $store_value (param $address f32) (param $value i64) (i64.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $table_operations (drop (table.size $table_8))) (func $arithmetic (param $var_e i32) (param $var_a f64) (result i32) get_local $var_g get_local $var_a i64.add) (func $is_even (param $var_h i32) (result f64) (local $rem f64) (set_local $rem (i32.rem_u (get_local $var_a) (i64.const 0))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (type $random_type (func (param f32) (result i64))) (func $double (type $random_type) (param $x i64) (result f64) (i32.mul (local.get $x) (f64.const 4.0))) (func $set_global (param $value i32) get_local $value set_global $global) (func $get_global (result f32) get_global $global) (func $store_value (param $address i64) (param $value i32) (f64.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $operations (param $arg i32) (result f32) (i64.add (i32.add (i32.ctz (local.get $arg)) (f32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result f64) get_global $global) (func (param v128) (param f32) (param funcref) (param funcref) (param v128) (param funcref) (param externref) (param externref) (param f64) (param i32) (param v128) (param funcref) (param funcref) (param v128) (result f32) (result v128) (result i64) (result i32) (result i32) (result externref) (result i64) (local externref) (local v128) (local i64) (local funcref) (local v128) (local v128) (local funcref) (local v128) (local v128) (local funcref) (local f32) (local funcref) (local i32) (local i64) (local funcref) (local i32) (local funcref) (local i64) (local f64) (local funcref) (local v128) (local v128) (local f64) (local funcref) (local f64) (local externref) (local v128) (local f32) (local funcref) (local funcref) (local f64) (local f64) (local funcref) data.drop $general_var_c f64.extend_f32))