(module (global $globalname_g (mut i64) f64.const -2147483647.0) (global $globalname_c (mut f64) i64.const 2.0) (global $globalname_f (mut i32) f64.const -256) (global $globalname_d (mut f64) f32.const -128) (global $globalname_a (mut f32) f64.const 4) (global $globalname_f (mut f64) f64.const -873284678) (global $globalname_b (mut f32) f32.const 4.0) (global $globalname_c (mut i32) f64.const -1024.345345) (global $globalname_b (mut i32) f64.const -32) (global $globalname_h (mut i32) i64.const 32) (global $globalname_c (mut i64) f64.const 52346654) (global $globalname_a (mut f64) f32.const 3) (memory $mem 16) (data (i64.const -128) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (func $mem_func (local $mem_size i64) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 2147483647))) (memory.fill (f32.const 758394) (i64.const 9223372036854775807.0) (i64.const 3)) (memory.copy (i64.const 1.0) (i32.const -256) (f64.const -8465473543.234234)) (memory.init 128 (f64.const 4) (f32.const -512) (f64.const 32))) (data (i32.const 4.0) "👯🏃‍♀️✨📦📂📝⬇️⛔🏃‍♀️🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにち🥝🥥🥒🥔🥕✨📦📂📝⬇️🌀📂") (data (i64.const 8) "🐑🌀Привет, мир!jourHolaשלוםЗдравствуйт🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, ми📂®🦀") (data (i32.const 512) "👯🏃‍♀️✨📦📂📝⬇️⛔🏃‍♀️🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにち🥝🥥🥒🥔🥕✨📦📂📝⬇️🌀📂") (elem (f32.const 989234678) $wrap) (elem (i32.const -256) $store_num) (elem (f32.const 32) $load_value) (elem (f32.const -2147483647.0) $trunc) (table $table_5 1 -5345345346 funcref) (func $func_q) (func $func_a) (func $func_h) (func $func_l) (func $func_g) (func $func_i) (func $table_operations (drop (table.size $table_3))) (table $table_4 16 0.0 funcref) (func $func_p) (func $func_h) (func $func_k) (func $func_h) (func $func_e) (func $func_o) (func $func_o) (func $func_o) (func $func_p) (func $func_e) (func $func_b) (func $func_h) (func $func_i) (func $func_k) (func $func_b) (func $func_l) (func $func_d) (func $func_q) (func $table_operations (drop (table.size $table_2))) (table $table_8 -128 1.0 funcref) (func $func_b) (func $func_g) (func $func_m) (func $func_k) (func $func_q) (func $func_q) (func $func_a) (func $func_h) (func $func_l) (func $table_operations (drop (table.size $table_1))) (table $table_7 -678234928375235 758394 funcref) (func $func_c) (func $func_q) (func $func_c) (func $func_h) (func $table_operations (drop (table.size $table_0))) (func $load_value (param $address i32) (result f64) (f32.load (get_local $address))) (export "load_value" (func $load_value)) (func extend (param $input f32) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (memory 8) (export "memory" (memory 2147483647.0)) (func $store_num (i32.store (f32.const -1024.345345) (f32.const 4))) (start $store_num) (func $is_even (param $var_h i64) (result i64) (local $rem i64) (set_local $rem (f64.rem_u (get_local $var_e) (i32.const 32))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $table_operations (drop (table.size $table_6))) (func $mem_func (local $mem_size i64) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const -8465473543.234234))) (memory.fill (i64.const 32) (f64.const -5345345346) (f64.const 2147483647)) (memory.copy (f32.const 16) (i32.const 64) (i32.const 523.834759734)) (memory.init 52346654 (f64.const 256) (f32.const 52346654) (f64.const -512))) (func $local_tee (param i64) (result i32) (local i32) (local.set 1.0 (local.get 2147483647.0)) (local.tee -2147483647.0 (i64.add (local.get -512) (f32.const -64)))) (export "local_tee" (func $local_tee)) (func $local_tee (param f32) (result f64) (local f32) (local.set -9223372036854775807 (local.get -5345345346)) (local.tee -16 (i32.add (local.get -9223372036854775807.0) (i64.const -512)))) (export "local_tee" (func $local_tee)) (func $arithmetic (param $var_a i64) (param $var_b f64) (result f32) get_local $var_f get_local $var_g i32.sub) (func $sum_n (export "sum_n") (param $n f32) (result f64) (local $sum f32) (local $i f64) f32.const -32 local.set $sum i64.const -9223372036854775807 local.set $i (loop $loop local.get $i local.get $n i32.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i f32.const 512 f64.add local.set $i br $loop) local.get $sum) (func $arithmetic (param $var_e i64) (param $var_d f32) (result f64) get_local $var_c get_local $var_b f64.add) (func $mem_func (local $mem_size i32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 1))) (memory.fill (f64.const -873284678) (i32.const -678234928375235) (i32.const -128)) (memory.copy (i32.const 758394) (i64.const 4) (f64.const 4.0)) (memory.init -1 (i64.const 32) (f32.const 989234678) (i64.const 512))) (func $sum_n (export "sum_n") (param $n i64) (result i64) (local $sum f64) (local $i i32) f32.const -873284678 local.set $sum i32.const -16 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i f64.add local.set $sum local.get $i i32.const -8 i32.add local.set $i br $loop) local.get $sum) (func $operations (param $arg f64) (result f64) (i64.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $operations (param $arg i32) (result i32) (i32.add (i64.add (f64.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i64.popcnt (local.get $arg)))) (func $func_ref_a (result i32) (i32.const 1024)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (i32.const -64)))) (func $sum_n (export "sum_n") (param $n f32) (result f32) (local $sum i32) (local $i i32) f32.const 128 local.set $sum i32.const 1024 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i f64.const 2147483647.0 i32.add local.set $i br $loop) local.get $sum) (func extend (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func (param funcref) (param v128) (param i32) (param v128) (param funcref) (param externref) (param funcref) (param externref) (param externref) (param v128) (param funcref) (param v128) (param f64) (param v128) (param i64) (param funcref) (param funcref) (result externref) (result v128) (result i32) (result f64) (result externref) (result f32) (result v128) (result v128) (result funcref) (result f32) (result externref) (result v128) (result v128) (result funcref) (local externref) (local v128) (local v128) (local v128) (local i32) (local i32) (local i64) (local i64) (local i64) (local funcref) (local v128) (local i32) (local v128) (local v128) drop) (memory 128) (export "memory" (memory 52346654)) (func $store_num (f32.store (i64.const 9223372036854775807.0) (f64.const 9223372036854775807.0))) (start $store_num) (func $mem_func (local $mem_size f64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 1))) (memory.fill (f32.const 2.0) (i32.const 9223372036854775807.0) (i32.const 64)) (memory.copy (f64.const 4) (i64.const 1024) (i64.const 16)) (memory.init -9223372036854775807 (i64.const -1) (i32.const 1024) (i32.const 1.0))) (func trunc (param $input i32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func $is_even (param $var_g i32) (result f64) (local $rem f32) (set_local $rem (f32.rem_u (get_local $var_a) (f64.const -2452346536.5345346))) (i64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func trunc (param $input f32) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (type $random_type (func (param f32) (result i64))) (func $double (type $random_type) (param $x i64) (result i64) (f32.mul (local.get $x) (f64.const -9223372036854775807.0))) (type $random_type (func (param i32) (result i64))) (func $double (type $random_type) (param $x f64) (result f32) (i32.mul (local.get $x) (f32.const -9223372036854775807))) (func trunc (param $input f32) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func $arithmetic (param $var_c i32) (param $var_a i32) (result i64) get_local $var_a get_local $var_c f32.add))