(module (func $local_tee (param i32) (result i32) (local i32) (local.set 0 (local.get 0)) (local.tee 0 (i32.add (local.get 0) (i32.const 1)))) (export "local_tee" (func $local_tee)) (func $is_even (param $var_a i32) (result i32) (local $rem_i32 i32) (set_local $rem_i32 (i32.rem_u (get_local $var_a) (i32.const 2))) (i32.eqz (get_local $rem_i32))) (export "is_even" (func $is_even)) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (func $arithmetic (param $var_e f32) (param $var_f f32) (result f32) get_local $var_e get_local $var_f f32.mul) (table $table_1 0 funcref) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic))