(module (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $is_even (param $var_a i32) (result i32) (local $rem_i32 i32) (set_local $rem_i32 (i32.rem_u (get_local $var_a) (i32.const 2))) (i32.eqz (get_local $rem_i32))) (export "is_even" (func $is_even)) (func $set_global (param $value i64) get_local $value set_global $globalname_b) (func $get_global (result i64) get_global $globalname_f) (func $arithmetic (param $var_c i64) (param $var_d i64) (result i64) get_local $var_c get_local $var_d i64.sub) (func $set_global (param $value f32) get_local $value set_global $globalname_c) (func $get_global (result f32) get_global $globalname_c) (func $arithmetic (param $var_e f32) (param $var_f f32) (result f32) get_local $var_e get_local $var_f f32.div) (func $set_global (param $value i32) get_local $value set_global $globalname_a) (func $get_global (result i32) get_global $globalname_a) (func $arithmetic (param $var_c i64) (param $var_d i64) (result i64) get_local $var_c get_local $var_d i64.mul) (func $wrap (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (func $extend (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (func $trunc (param $input f64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "wrap" (func $wrap)) (export "extend" (func $extend)) (export "trunc" (func $trunc)) (func $local_tee (param i32) (result i32) (local i32) (local.set 0 (local.get 0)) (local.tee 0 (i32.add (local.get 0) (i32.const 1)))) (export "local_tee" (func $local_tee)) (global $globalname_a (mut i32) i32.const 4) (global $globalname_b (mut i64) i64.const 0) (global $globalname_c (mut f32) f32.const 2147483647.0) (global $globalname_d (mut f64) f64.const 4.0) (global $globalname_e (mut i32) i32.const 4) (global $globalname_f (mut i64) i64.const 4) (global $globalname_g (mut f32) f32.const 2.0) (global $globalname_h (mut f64) f64.const 4.0) (func $set_global (param $value i32) get_local $value set_global $globalname_a) (func $get_global (result i32) get_global $globalname_a) (func $arithmetic (param $var_g f64) (param $var_h f64) (result f64) get_local $var_g get_local $var_h f64.add) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (global $globalname_a (mut i32) i32.const 2147483647) (global $globalname_b (mut i64) i64.const 1) (global $globalname_c (mut f32) f32.const 3.0) (global $globalname_d (mut f64) f64.const 3.0) (global $globalname_e (mut i32) i32.const 2147483647) (global $globalname_f (mut i64) i64.const 4) (global $globalname_g (mut f32) f32.const 0.0) (global $globalname_h (mut f64) f64.const 1.0) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $store_value (param $address i32) (param $value f64) (f64.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f64) (f64.load (get_local $address))) (func $store_value (param $address i32) (param $value f64) (f64.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f64) (f64.load (get_local $address))) (func $func_b) (table $table_1 0 funcref) (func $table_operations (drop (table.size $table_1))) (func $store_value (param $address i32) (param $value i32) (i32.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result i32) (i32.load (get_local $address))) (export "store_value" (func $store_value)) (export "load_value" (func $load_value)))