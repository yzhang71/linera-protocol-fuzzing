(module (global $globalname_f (mut i64) f32.const 523.834759734) (global $globalname_b (mut i64) i32.const -2452346536.5345346) (global $globalname_d (mut f32) i32.const -32) (global $globalname_h (mut i32) i64.const 1.0) (global $globalname_a (mut i32) f64.const -2452346536.5345346) (global $globalname_g (mut f32) f32.const -16) (global $globalname_g (mut i64) f64.const 16) (global $globalname_h (mut i32) i64.const -1) (global $globalname_h (mut f64) i64.const -8465473543.234234) (global $globalname_e (mut i32) f32.const -2147483647.0) (global $globalname_e (mut i64) f64.const -8465473543.234234) (global $globalname_e (mut f32) f64.const 8) (global $globalname_e (mut f64) f32.const -256) (global $globalname_b (mut f32) f32.const -8465473543.234234) (global $globalname_c (mut f32) f32.const 0.0) (global $globalname_d (mut i32) i32.const 1) (global $globalname_a (mut i64) f64.const 128) (global $globalname_g (mut i64) i64.const -256) (global $globalname_h (mut i32) f32.const 523.834759734) (global $globalname_a (mut f64) i64.const 32) (global $globalname_h (mut i64) i64.const 128) (global $globalname_a (mut f32) f32.const 3) (global $globalname_e (mut i64) f64.const 2147483647.0) (global $globalname_d (mut i64) i32.const -1) (memory $mem 52346654) (data (f32.const -256) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (func $mem_func (local $mem_size f32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const -64))) (memory.fill (f32.const 128) (f32.const -128) (i64.const -256)) (memory.copy (i32.const -2147483647.0) (f64.const -2452346536.5345346) (f32.const 52346654)) (memory.init 4 (i32.const -8465473543.4387534) (f64.const 16) (i32.const -1024.345345))) (data (i64.const -2452346536.5345346) "にちは🌀🏃‍♀️✨🐑🌀Привет, мир!📂📦📂🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📝⬇️🏃‍♀️📂") (data (i64.const 758394) "こんにちは안녕하세요你好🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, мир!📂⚠️") (data (i32.const -8465473543.4387534) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีค🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutรับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📂") (data (f64.const 0.0) "🐑🌀Привет, мир!jourHolaשלוםЗдравствуйт🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, ми📂®🦀") (data (i64.const -9223372036854775807.0) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (data (i32.const -8) "🌀📂ПриветnjourHolaש🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾לוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこん, мир!ℹ️") (data (f64.const -5345345346) "こんにちは、WebAssembly！🌞Grüßgott🦉🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครั🍒🍓🥑🥝🥥🥒🥔🥕🥨") (data (i32.const 2147483647.0) "🐑🌀Привет, мир!📂Hello, !こんにちは、WebAssembly🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐑") (elem (f64.const -128) $is_even) (elem (f32.const 9223372036854775807.0) $double) (elem (i64.const 8) $local_tee) (elem (f64.const -2452346536.5345346) $get_global) (table $table_4 52346654 128 funcref) (func $func_p) (func $func_a) (func $func_h) (func $func_k) (func $func_f) (func $func_a) (func $func_q) (func $func_n) (func $func_p) (func $func_e) (func $func_q) (func $func_h) (func $func_m) (func $func_l) (func $func_q) (func $func_o) (func $func_f) (func $func_p) (func $func_o) (func $func_g) (func $func_g) (func $func_i) (func $func_o) (func $func_n) (func $func_i) (func $func_f) (func $func_i) (func $func_b) (func $table_operations (drop (table.size $table_6))) (table $table_4 8 -8465473543.4387534 funcref) (func $func_g) (func $func_l) (func $func_d) (func $func_e) (func $func_h) (func $func_i) (func $func_q) (func $func_g) (func $func_j) (func $func_k) (func $func_p) (func $func_l) (func $func_b) (func $func_d) (func $func_p) (func $func_l) (func $func_o) (func $func_o) (func $func_k) (func $func_j) (func $func_k) (func $func_p) (func $func_j) (func $func_k) (func $func_k) (func $func_a) (func $func_j) (func $func_j) (func $func_f) (func $func_d) (func $table_operations (drop (table.size $table_3))) (table $table_9 3.0 -512 funcref) (func $func_i) (func $func_m) (func $table_operations (drop (table.size $table_8))) (table $table_2 128 -873284678 funcref) (func $func_e) (func $func_f) (func $func_d) (func $func_o) (func $func_q) (func $func_j) (func $func_b) (func $func_a) (func $func_d) (func $func_l) (func $func_k) (func $func_b) (func $func_m) (func $func_f) (func $func_l) (func $func_e) (func $func_e) (func $func_n) (func $table_operations (drop (table.size $table_2))) (table $table_4 2147483647.0 -2452346536.5345346 funcref) (func $func_m) (func $func_o) (func $func_f) (func $func_i) (func $func_o) (func $func_l) (func $func_g) (func $func_n) (func $func_n) (func $func_p) (func $func_q) (func $func_q) (func $func_m) (func $func_h) (func $func_h) (func $func_l) (func $func_p) (func $func_g) (func $func_q) (func $table_operations (drop (table.size $table_3))) (table $table_5 -5345345346 1 funcref) (func $func_l) (func $func_k) (func $func_m) (func $func_k) (func $func_j) (func $func_d) (func $table_operations (drop (table.size $table_2))) (table $table_0 128 -64 funcref) (func $func_h) (func $func_m) (func $func_l) (func $func_o) (func $func_p) (func $func_n) (func $func_c) (func $func_m) (func $func_q) (func $func_h) (func $func_k) (func $func_n) (func $func_p) (func $table_operations (drop (table.size $table_5))) (table $table_0 989234678 523.834759734 funcref) (func $func_j) (func $func_k) (func $table_operations (drop (table.size $table_1))) (table $table_7 -256 -9223372036854775807.0 funcref) (func $func_k) (func $func_d) (func $func_k) (func $func_m) (func $func_b) (func $func_k) (func $func_n) (func $func_d) (func $func_m) (func $func_j) (func $func_j) (func $func_d) (func $func_l) (func $func_f) (func $func_h) (func $func_b) (func $table_operations (drop (table.size $table_1))) (table $table_7 523.834759734 1024 funcref) (func $func_o) (func $func_b) (func $func_k) (func $func_g) (func $func_p) (func $func_k) (func $func_p) (func $func_n) (func $func_d) (func $func_o) (func $func_q) (func $func_j) (func $func_q) (func $func_l) (func $table_operations (drop (table.size $table_5))) (table $table_6 2147483647.0 4 funcref) (func $func_c) (func $table_operations (drop (table.size $table_9))) (table $table_1 2147483647.0 989234678 funcref) (func $func_h) (func $table_operations (drop (table.size $table_0))) (table $table_2 -9223372036854775807.0 -16 funcref) (func $func_g) (func $func_p) (func $table_operations (drop (table.size $table_8))) (table $table_8 0.0 -32 funcref) (func $func_p) (func $func_n) (func $table_operations (drop (table.size $table_0))) (table $table_1 989234678 -2147483647.0 funcref) (func $func_n) (func $func_m) (func $func_c) (func $func_p) (func $func_k) (func $func_f) (func $func_a) (func $func_i) (func $func_d) (func $func_f) (func $table_operations (drop (table.size $table_4))) (table $table_1 -1 -64 funcref) (func $func_k) (func $func_h) (func $func_q) (func $func_j) (func $func_j) (func $func_g) (func $func_a) (func $func_f) (func $func_k) (func $func_e) (func $func_d) (func $func_k) (func $func_n) (func $table_operations (drop (table.size $table_3))) (table $table_8 1 1024 funcref) (func $func_o) (func $table_operations (drop (table.size $table_0))) (table $table_2 1.0 9223372036854775807.0 funcref) (func $func_b) (func $table_operations (drop (table.size $table_3))) (type $random_type (func (param i64) (result f32))) (func $double (type $random_type) (param $x f64) (result i32) (i32.mul (local.get $x) (f32.const -9223372036854775807))) (func $is_even (param $var_g i32) (result i32) (local $rem i64) (set_local $rem (i32.rem_u (get_local $var_a) (f32.const -8465473543.4387534))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $mem_func (local $mem_size f64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const 0.0))) (memory.fill (i64.const 1.0) (i32.const -9223372036854775807) (i32.const 523.834759734)) (memory.copy (f32.const 32) (f32.const -64) (f64.const -512)) (memory.init 1 (i32.const -64) (i64.const -678234928375235) (f32.const 4.0))) (func $func_ref_a (result i64) (i64.const 16)) (func $func_ref_b) (func $ref_operations (result f32) (ref.null func) (ref.is_null) (if (result f64) (then (call $func_ref_a)) (else (f64.const -32)))) (type $random_type (func (param f32) (result f64))) (func $double (type $random_type) (param $x i64) (result i32) (f32.mul (local.get $x) (f32.const -1024.345345))) (memory 2.0) (export "memory" (memory 989234678)) (func $store_num (f64.store (f64.const 64) (i64.const 2.0))) (start $store_num) (memory -8) (export "memory" (memory -8465473543.234234)) (func $store_num (f32.store (f32.const -1) (i64.const 52346654))) (start $store_num) (type $random_type (func (param i32) (result i64))) (func $double (type $random_type) (param $x f32) (result i32) (f32.mul (local.get $x) (i32.const 2147483647.0))) (func $mem_func (local $mem_size f64) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 3.0))) (memory.fill (f32.const -5345345346) (f64.const -128) (i32.const -9223372036854775807)) (memory.copy (f64.const 0) (i32.const -1024.345345) (f64.const 256)) (memory.init 758394 (f64.const 32) (f32.const -8465473543.4387534) (f32.const -5345345346))) (func $mem_func (local $mem_size i32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 512))) (memory.fill (i64.const 523.834759734) (f64.const -1) (i32.const -1)) (memory.copy (i32.const 1) (f32.const 2.0) (i64.const -256)) (memory.init -512 (f32.const 2.0) (f32.const 52346654) (i32.const -2452346536.5345346))) (func (param funcref) (param f32) (param externref) (param i64) (param v128) (param funcref) (param externref) (param v128) (param v128) (result externref) (result funcref) (result i32) (result externref) (result funcref) (result v128) (result v128) (local i64) table.fill f64.load(16_s) i64.eq memory.copy i32.mul ref.func $general_var_d global.set $general_var_d table.fill $general_var_c select i32x4.any_true v128.bitmask v128.load8_splat) table.set) (func $mem_func (local $mem_size i64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 2.0))) (memory.fill (i32.const 4) (i64.const 0.0) (i64.const 2.0)) (memory.copy (i32.const 3.0) (f64.const 32) (i32.const 4)) (memory.init 3.0 (f64.const 256) (f32.const 1024) (f32.const 1))) (memory 1.0) (export "memory" (memory -9223372036854775807)) (func $store_num (i32.store (i32.const -256) (i64.const 0.0))) (start $store_num) (func $sum_n (export "sum_n") (param $n f32) (result f32) (local $sum i32) (local $i i32) i32.const 1024 local.set $sum f64.const 989234678 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i i64.add local.set $sum local.get $i i32.const 2147483647.0 i32.add local.set $i br $loop) local.get $sum) (func trunc (param $input f32) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (type $random_type (func (param f32) (result i32))) (func $double (type $random_type) (param $x i64) (result f32) (i64.mul (local.get $x) (f32.const -9223372036854775807))) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result i64) get_global $global) (type $random_type (func (param f64) (result i32))) (func $double (type $random_type) (param $x f64) (result f32) (i64.mul (local.get $x) (i32.const 16))) (func $sum_n (export "sum_n") (param $n f32) (result f64) (local $sum i32) (local $i i64) f64.const 32 local.set $sum f64.const 16 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i f64.const -8465473543.234234 f32.add local.set $i br $loop) local.get $sum) (func $local_tee (param i64) (result i32) (local i32) (local.set 989234678 (local.get -5345345346)) (local.tee 4 (i64.add (local.get 1024) (f64.const -256)))) (func $mem_func (local $mem_size f64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 2.0))) (memory.fill (i32.const -64) (f32.const 4) (f32.const 1024)) (memory.copy (f64.const 16) (f64.const 512) (i64.const 0.0)) (memory.init -8 (f64.const 3.0) (i32.const 758394) (i32.const 1))) (func $sum_n (export "sum_n") (param $n i64) (result i32) (local $sum i32) (local $i i64) i32.const -16 local.set $sum f32.const -512 local.set $i (loop $loop local.get $i local.get $n f64.gt_s if br $loop end local.get $sum local.get $i f64.add local.set $sum local.get $i f32.const 128 f32.add local.set $i br $loop) local.get $sum) (func $sum_n (export "sum_n") (param $n f32) (result f64) (local $sum f64) (local $i i32) f32.const -5345345346 local.set $sum i32.const -8465473543.4387534 local.set $i (loop $loop local.get $i local.get $n i32.gt_s if br $loop end local.get $sum local.get $i i64.add local.set $sum local.get $i f64.const 758394 i32.add local.set $i br $loop) local.get $sum) (func $mem_func (local $mem_size f64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 2.0))) (memory.fill (f32.const -256) (f32.const 0.0) (f32.const 1.0)) (memory.copy (i64.const 32) (f32.const -678234928375235) (f32.const 2147483647)) (memory.init 2.0 (f32.const 3.0) (i64.const 2147483647) (f64.const -873284678))) (func $operations (param $arg f32) (result i64) (i32.add (i64.add (i64.ctz (local.get $arg)) (f32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (memory 4.0) (export "memory" (memory 4.0)) (func $store_num (f32.store (f64.const -256) (f32.const 2147483647.0))) (start $store_num) (type $random_type (func (param f32) (result i32))) (func $double (type $random_type) (param $x i64) (result i64) (f64.mul (local.get $x) (i64.const -32))) (func $arithmetic (param $var_d i32) (param $var_a i32) (result f32) get_local $var_e get_local $var_f i64.div) (func $mem_func (local $mem_size i64) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 1.0))) (memory.fill (f64.const 32) (i32.const 0) (i32.const 3.0)) (memory.copy (f64.const 9223372036854775807.0) (f32.const 2.0) (f32.const 64)) (memory.init -2452346536.5345346 (f64.const -64) (f32.const -678234928375235) (f64.const 64))) (func (param funcref) (param f64) (param i32) (param v128) (param i32) (param v128) (param v128) (param i32) (param f32) (param i32) (param funcref) (param externref) (param v128) (param f64) (param externref) (result i64) (result funcref) (local i32) (local i32) (local f64) (local v128) (local i32) ref.func $general_var_g i64x2.bitselect memory.fill table.size $general_var_d i32.eqz memory.copy i64.store8 i32.store8) (func $mem_func (local $mem_size f32) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 758394))) (memory.fill (f64.const -8465473543.4387534) (f64.const 4.0) (f32.const 8)) (memory.copy (i64.const 4) (i32.const -16) (f64.const -256)) (memory.init 2147483647.0 (f64.const 4.0) (i64.const -16) (f32.const 1024))) (func $local_tee (param i64) (result f64) (local f32) (local.set -2452346536.5345346 (local.get -256)) (local.tee 16 (f64.add (local.get -32) (f64.const 128)))) (func $local_tee (param i64) (result i32) (local i32) (local.set 1.0 (local.get 3.0)) (local.tee 16 (f64.add (local.get 2147483647) (i32.const -873284678)))) (export "local_tee" (func $local_tee)) (func wrap (param $input f64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func (param v128) (param funcref) (param funcref) (param i32) (result externref) (result i64) (result f32) (result v128) (result v128) (result externref) (local f32) (local i64) (local v128) (local f32) (local i64) (local v128) (local v128) (local funcref) (local v128) (local externref) (local f32) (local i64) (local externref) (local f32) (local externref) (local i32) (local v128) (local v128) (local i32) (local funcref) (local v128) (local v128) (local f64) (local externref) local.set $general_var_d) (type $random_type (func (param f64) (result i64))) (func $double (type $random_type) (param $x f32) (result f32) (f32.mul (local.get $x) (i32.const -128))))