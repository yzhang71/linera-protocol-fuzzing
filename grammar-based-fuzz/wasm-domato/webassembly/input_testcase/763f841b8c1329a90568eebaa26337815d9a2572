(module (global $globalname_h (mut i32) f32.const 9223372036854775807.0) (global $globalname_d (mut i32) i32.const 52346654) (global $globalname_c (mut i32) i32.const 4) (global $globalname_b (mut f64) f64.const 523.834759734) (global $globalname_h (mut i64) i64.const 1) (global $globalname_b (mut i64) i32.const 4) (global $globalname_e (mut i32) f64.const -5345345346) (global $globalname_d (mut f64) i64.const 758394) (global $globalname_b (mut i32) f64.const -2147483647.0) (global $globalname_e (mut f64) f64.const 9223372036854775807) (global $globalname_d (mut i32) i64.const 512) (global $globalname_f (mut i64) i64.const -128) (global $globalname_d (mut f64) f64.const -8) (global $globalname_b (mut i32) f32.const -8465473543.234234) (global $globalname_h (mut i64) i64.const 1024) (global $globalname_g (mut i64) f32.const 523.834759734) (global $globalname_d (mut f64) f32.const 9223372036854775807.0) (global $globalname_c (mut i64) i64.const 989234678) (global $globalname_e (mut f32) f64.const -1024.345345) (memory $mem 256) (data (f32.const -64) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (func $mem_func (local $mem_size f32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const -8465473543.234234))) (memory.fill (f64.const -32) (i64.const 2147483647) (f32.const -5345345346)) (memory.copy (i64.const 758394) (i64.const -678234928375235) (f64.const 758394)) (memory.init 32 (f64.const -64) (i64.const 989234678) (i64.const 16))) (data (f32.const 1024) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (f64.const 1024) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (elem (f64.const 523.834759734) $local_tee) (elem (f64.const -9223372036854775807) $double) (elem (f64.const 1.0) $wrap) (elem (f32.const -5345345346) $operations) (elem (f64.const 3.0) $trunc) (elem (f64.const -2147483647.0) $load_value) (elem (f64.const 64) $store_value) (elem (f64.const -64) $is_even) (elem (i64.const 758394) $wrap) (elem (i32.const 4.0) $ref_operations) (elem (i64.const 9223372036854775807.0) $load_value) (elem (f32.const 512) $double) (elem (i32.const -512) $is_even) (elem (f64.const 16) $local_tee) (elem (i32.const -8465473543.234234) $wrap) (elem (f32.const -256) $wrap) (elem (i32.const -1) $get_global) (elem (i64.const -64) $arithmetic) (elem (i64.const -678234928375235) $store_num) (elem (i64.const 256) $table_operations) (elem (f64.const 9223372036854775807) $set_global) (table $table_9 -9223372036854775807 4 funcref) (func $func_o) (func $func_l) (func $func_q) (func $func_e) (func $func_j) (func $func_m) (func $func_b) (func $func_i) (func $func_p) (func $table_operations (drop (table.size $table_2))) (table $table_8 1024 256 funcref) (func $func_c) (func $func_a) (func $func_q) (func $func_o) (func $func_k) (func $func_a) (func $func_j) (func $func_n) (func $func_o) (func $func_h) (func $func_o) (func $func_a) (func $func_e) (func $func_q) (func $func_k) (func $func_l) (func $func_d) (func $func_j) (func $func_o) (func $func_m) (func $func_k) (func $func_m) (func $func_a) (func $func_k) (func $func_q) (func $func_o) (func $func_e) (func $func_p) (func $func_c) (func $func_q) (func $func_h) (func $func_a) (func $func_e) (func $func_f) (func $func_p) (func $func_k) (func $func_h) (func $func_p) (func $func_m) (func $func_a) (func $func_o) (func $func_c) (func $table_operations (drop (table.size $table_4))) (table $table_8 64 4.0 funcref) (func $func_c) (func $func_k) (func $func_b) (func $func_d) (func $func_j) (func $func_d) (func $func_a) (func $func_o) (func $func_k) (func $func_g) (func $func_h) (func $func_f) (func $func_q) (func $func_p) (func $func_e) (func $table_operations (drop (table.size $table_0))) (type $random_type (func (param i32) (result i32))) (func $double (type $random_type) (param $x f64) (result i64) (f32.mul (local.get $x) (f32.const 64))) (func $local_tee (param f32) (result i32) (local f64) (local.set 16 (local.get 523.834759734)) (local.tee -1024.345345 (f64.add (local.get 16) (i64.const 1)))) (export "local_tee" (func $local_tee)))