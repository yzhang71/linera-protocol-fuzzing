(module (func $sum_n (export "sum_n") (param $n i32) (result i32) (local $sum i32) (local $i i32) i32.const 0 local.set $sum i32.const 1 local.set $i (loop $loop local.get $i local.get $n i32.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i i32.const 1 i32.add local.set $i br $loop) local.get $sum) (memory 1) (export "memory" (memory 0)) (func $store_num (i32.store (i32.const 0) (i32.const 42))) (start $store_num) (func $store_value (param $address i32) (param $value f32) (f32.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f32) (f32.load (get_local $address))))