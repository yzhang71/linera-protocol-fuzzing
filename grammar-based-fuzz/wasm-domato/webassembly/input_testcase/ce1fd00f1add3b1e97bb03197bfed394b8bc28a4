(module (global $globalname_f (mut f32) f32.const 4.0) (global $globalname_c (mut i32) i32.const 9223372036854775807) (global $globalname_e (mut i32) f64.const 0.0) (global $globalname_h (mut i64) i32.const -5345345346) (global $globalname_h (mut i32) f32.const -1) (global $globalname_b (mut f64) f32.const -32) (global $globalname_g (mut f32) f32.const 256) (global $globalname_d (mut f64) f32.const -32) (memory $mem 1024) (data (i32.const 256) "🌀⬇️🏃‍♀️✨Hell🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Bueno🌳🌱🌰🌻🌼🌷o, Привет, мир!!こんにちは、WebAssembly📦📂") (func $mem_func (local $mem_size i64) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 9223372036854775807.0))) (memory.fill (i32.const -2147483647.0) (f64.const 8) (f64.const 1024)) (memory.copy (i64.const 3.0) (i64.const 512) (f32.const -678234928375235)) (memory.init 0.0 (f64.const 4) (i64.const -1024.345345) (i64.const -9223372036854775807))) (data (f64.const -32) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (elem (f64.const 64) $table_operations) (elem (f32.const 1) $double) (elem (i64.const -5345345346) $get_global) (table $table_7 -9223372036854775807 0 funcref) (func $func_f) (func $func_q) (func $func_n) (func $func_o) (func $func_m) (func $func_p) (func $func_c) (func $func_a) (func $table_operations (drop (table.size $table_0))) (func $operations (param $arg i32) (result i64) (f64.add (i64.add (i32.ctz (local.get $arg)) (f64.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func (param v128) (param externref) (param f32) (param v128) (param f64) (param f64) (param externref) (param v128) (param v128) (param v128) (param externref) (param externref) (param funcref) (param v128) (param funcref) (param v128) (param externref) (param v128) (param externref) (param v128) (param v128) (param funcref) (param f32) (result v128) (result i64) (result externref) (local v128) (local v128) (local i32) (local f32) (local i64) (local i64) (local v128) (local f64) (local v128) (local f64) (local i32) (local i32) (local funcref) (local i32) (local funcref) f64.mul v128.load(16x4_s) v128.load(32x2_u) select v128.const i64x2 -16))