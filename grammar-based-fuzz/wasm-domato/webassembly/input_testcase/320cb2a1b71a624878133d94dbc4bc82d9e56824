(module (global $globalname_c (mut f64) i64.const -32) (global $globalname_e (mut f64) i64.const -128) (global $globalname_g (mut f32) f64.const 8) (memory $mem 989234678) (data (i64.const -32) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (func $mem_func (local $mem_size f32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 9223372036854775807))) (memory.fill (f64.const 9223372036854775807) (f32.const -32) (f64.const -8465473543.4387534)) (memory.copy (f64.const 3) (i32.const 4) (f32.const 4)) (memory.init 4 (i64.const -32) (f32.const 2147483647) (f64.const -8465473543.234234))) (data (i32.const 16) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (data (f32.const 128) "🌀📂🎯Hello, Привет, мир!!こんにちは、WebAssembly📝🌀📂ℹ️🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut⬇️📂") (data (i64.const 2147483647) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (data (i64.const 16) "🐑🌀Привет, мир!jourHolaשלוםЗдравствуйт🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, ми📂®🦀") (elem (i32.const -8) $arithmetic) (elem (f32.const -9223372036854775807.0) $double) (elem (i32.const -1) $local_tee) (elem (f64.const -8) $load_value) (table $table_9 52346654 52346654 funcref) (func $func_g) (func $func_o) (func $func_g) (func $func_n) (func $table_operations (drop (table.size $table_0))) (func extend (param $input f64) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func $func_ref_a (result i32) (f32.const 16)) (func $func_ref_b) (func $ref_operations (result i64) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (f64.const -2147483647.0)))) (func $load_value (param $address f64) (result i64) (i64.load (get_local $address))) (export "load_value" (func $load_value)) (memory 128) (export "memory" (memory 2147483647.0)) (func $store_num (i32.store (i64.const 1) (i32.const -64))) (start $store_num) (memory 9223372036854775807.0) (export "memory" (memory -5345345346)) (func $store_num (f32.store (i64.const -8465473543.4387534) (i32.const -5345345346))) (start $store_num) (func $load_value (param $address f64) (result f32) (f32.load (get_local $address))) (export "load_value" (func $load_value)) (func $sum_n (export "sum_n") (param $n f32) (result f64) (local $sum i64) (local $i f64) f64.const 989234678 local.set $sum f64.const -2452346536.5345346 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i f32.add local.set $sum local.get $i i64.const 1 f64.add local.set $i br $loop) local.get $sum) (type $random_type (func (param f64) (result i32))) (func $double (type $random_type) (param $x f64) (result f64) (i64.mul (local.get $x) (f32.const -1024.345345))) (func $operations (param $arg f64) (result f64) (i32.add (f32.add (f32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func (param f64) (param v128) (param externref) (param v128) (param externref) (param funcref) (param funcref) (param v128) (param f32) (param v128) (result i32) (result v128) (result f32) (result v128) (result i64) (result funcref) (result funcref) (local externref) (local f64) (local v128) (local f64) (local f32) (local externref) (local externref) memory.fill table.grow v128.store v128.store8_lane table.grow $general_var_f global.get $general_var_f table.size ref.func $general_var_g v128.store64_lane f64.wrap_i32 select f32.store32 call $general_var_h table.set $general_var_a v128.load(32x2_u) v128.store32_lane v128.store8_lane v128.eq local.tee $general_var_l i8x16.bitselect v128.load16_splat) f32.store32 table.fill $general_var_e select local.get $general_var_e memory.init $general_var_i f32.eq call $general_var_g f32x4.trunc_sat_i8x16_u))